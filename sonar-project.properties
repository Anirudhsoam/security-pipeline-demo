name: SonarQube Code Analysis

# When to run the analysis
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Get the code
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # Fetch full history for better analysis
        fetch-depth: 0

    # Step 2: Set up Java (required for SonarQube Scanner)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # Step 3: Cache SonarQube packages for faster builds
    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    # Step 4: Run SonarQube analysis
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io

    # Step 5: Check Quality Gate status
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
